

非必要註解可以斟酌刪除，否則 code 會顯得特別雜亂，若是屬於想要釐清邏輯的，那麼可以斟酌留下來沒關係，只是會建議盡可能撰寫註解時，也要整理一下唷~
> 我把這個專案當做工具庫，所以我會寫一些當我需要使用類似功能時能夠快速理解，我會盡量精簡並整理的！！

 ///////////////////////////////////////////////search all//////////////////////////////////////////////
x 許多多餘的換行符號都可以記得清除，整理一下整體程式碼，例如 App.vue 的第七行可以刪除以及 class="" 若沒有使用也可以刪除哩。
class=""/
沒有使用的程式碼請記得刪除，如：StoryView.vue 12 行。

x div 標籤並沒有預設行為，請移除 .prevent。

x img 標籤建議補上/優化 alt 屬性增加使用者體驗唷。alt=""

X 非必要狀況下，v-for 在跑時，請盡可能避免使用 index，除非他沒有可以作為唯一值的屬性。

x 要渲染在畫面的元件，建議與元件名稱相同，例如：<HelloWorld><HelloWorld/> 而不是 <hello-world><hello-world/> 雖然兩者皆可以運行，但是可以在 VSCode 看到 的寫法會高亮顯示（這是一個元件概念）對於自己快速找元件在哪裡時是非常方便的唷 :D
> search ><

 ///////////////////////////////////////////////rug search//////////////////////////////////////////////
((修倒這)) 使用 pinia 之後，就可以不用再使用 emitter 了。

頂級標籤(template、script、style) 之間請有個換行。

important 在使用時要多加注意權重問題哩。

如果沒有要傳入參數，那麼請把 Function Call 移除，如： ProductsItem.vue 470 行。




 ///////////////////////////////////////////////result to do//////////////////////////////////////////////

建議可以試著建立 frontend 及 backend 兩種資料夾區分前後台，區分的好處在於方便自己將來的維護。

建議可以建立一個 scss 資料夾區分相關檔案，例如：all.scss、helpers 等，因此也可以建立一個 img 資料夾專門放相關圖片哩。



 ///////////////////////////////////////////////question//////////////////////////////////////////////

圖片的引入方式可以調整一下，可詳見文章。
https://israynotarray.com/vue/20230330/238425903/
有分靜態引入（直接在html引入src）和 非靜態引入（必須透過import引入:src），兩者編譯出來會不太一樣，靜態引入路徑有分別名和相對路徑和require＋相對路徑
Q: 助教說要調整引入方式，有看完文章，但不太了解調整的理由
1. 所以我在src使用相對路徑或別名引入，都要改import引入嗎？，因為圖片都要編譯過，都屬於非靜態資源，所以都要改成import，
2. 還是說nbaWeb資料夾的圖片不用編譯，應該屬於靜態資源，可以直接移到public中去用相對路徑引入即可，也不用import，但文章中沒有提到vite中public資料夾的圖片引入方式，我猜是跟cli一樣"/img/...jpg"


關於：當元件不插入其他元素時，可以改成自閉合，例如：<Loading></Loading> → <Loading>
Q：我將<Loading :active="isLoading"></Loading> ，
這邊改自閉合會錯誤，[plugin:vite:vue] Element is missing end tag.


 ///////////////////////////////////////////////css//////////////////////////////////////////////

一個專案內通常只會引入一個 UI 框架（你目前引入了 Bootstrap + Element UI），引入兩者可能會發生衝突、整體版型不統一等問題，因此建議你擇一使用就好，除非是前後台差異，那就沒關係。
> 改前台就好 拿掉ele ui

理論上來說，你使用 SCSS 的話，專案中是不會有 .css 的。
> css改成scss寫法 檔案也是

all.scss 跟 main.scss 應該都是相同的東西。

assets/nbaWeb/參考，參考的東西請不要放在專案內，會凸顯作品的不專業度，因為這不屬於專案（src）的一部分。

ckeditor5-build-classic 如果要使用的話，請使用 npm，所以請把 public 的移除。
> 有使用npm 但是public中，是透過官網去勾選自定義的功能，並生成的資料夾檔案，不像npm的會產生出內建的功能，所以會等到編譯產生dist才覆蓋原本的 > 刪掉，會用自定義功能就好 

測試相關的檔案請移除，若沒有使用卻又有檔案在內會顯的很奇怪，面試時被問到會很尷尬。

圖片建議不要太大張（尺寸不超過顯示區域的 2 倍）。

 ///////////////////////////////////////////////solve//////////////////////////////////////////////

x 部分檔案有 ESLint，請確定你的 VSCode 是否有安裝 ESLint 靜態分析套件，可詳見助教文章。
    https://israynotarray.com/vscode/20191212/2147775133/#ESLint
    ctrl + s 整理排版
x vite.config.js 的 base 會建議調整成助教文章這樣較好哩。
    // https://israynotarray.com/nodejs/20230214/796256725/
    /* global process */
    // https://vitejs.dev/config/
    export default defineConfig({
    plugins: [vue()],
    // base: '/jtown-vite/', //*https://courses.hexschool.com/courses/vue-20211/lectures/43730457
    base: process.env.NODE_ENV === 'production' ? '/jtown-vite/' : '/',
    resolve: {
        alias: {
        '@': fileURLToPath(new URL('./src', import.meta.url))
        }
    }
    })
x 可多加美化 index.html 中的 meta，另外請多加注意 lang 要調整至相關語系，例如調整成 「zh-Hant-TW」，若是英語系網站則可以保留預設 「en」。
x 請移除你放在 index.html Bootstrap CSS CDN，因為你目前已經多次引入了，有可能發生一些不可預期的錯誤。
x 元件命名上請盡可能避免與原生 HTML 類似，避免發生一些不可預期的問題。
    (header navbar ...)
x 副檔名為 .vue 的檔案會建議首字大寫，可以看到 Vue 官方文獻也都是首字大寫唷。
x router 資料夾內的 index.js 可以增加 { path: '*', redirect: '/' }，避免使用者輸入不存在的 router。